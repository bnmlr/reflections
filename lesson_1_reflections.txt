How did viewing a diff between two versions of a file help you see the bug that was introduced?
-It focused only on where changes happened, so I had to look through less code to find the typo.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-I could more easily identify bugs, more easily revert to earlier versions if necessary, pull from old work, etc. 
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
-Manual save pros: meaningful versions, avoid too many, more control of how many. cons: potentially lose work, could forget to commit
Why do think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-b/c if you're saving when you add new features or functionality, these will likely span multiple files.
How can you use the commands git log and git diff to view the history of files?
-git log shows you all the commits so you can choose which you want to compare. then git
diff allows you to compare them to find the differences.
How might using version control make you more confident to make changes that could break something?
-Knowing that you can easily revert makes it easier to take risks.
Now that you have your workspace set up, what do you want to try using Git for?
-My nanodegree projects
